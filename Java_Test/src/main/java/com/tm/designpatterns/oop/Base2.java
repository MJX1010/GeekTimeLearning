package com.tm.designpatterns.oop;

public abstract class Base2 {

    /*
    * 抽象方法必须写在抽象类中
    * 抽象类中不一定包含抽象方法
    *
    * 1. 抽象类不能被实例化new
    * 2. 抽象类设计目标用于被继承， 子类需要实现全部的抽象方法
    * 3. 抽象方法只有定义，没有实现，只是定义了子类必须实现的接口规范
    * 4. 定义了抽象方法的class必须被定义为抽象类，从抽象类继承的子类必须实现抽象方法；
    * 5. 如果不实现抽象方法，则该子类仍是一个抽象类
    * 6. 面向抽象编程使得调用者只关心抽象方法的定义，不关心子类的具体实现。
    *
    * 面向抽象编程
    *
    * 1. 上层只定义规范
    * 2. 不需要子类就可以实现业务逻辑（正常编译）
    * 3. 具体的业务逻辑需要不同子类实现，调用者不用关心
    * */
}
